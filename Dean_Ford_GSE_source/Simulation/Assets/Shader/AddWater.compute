// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> terrain;

float waterIncrease;
float dTime;
float size;
//current elevation scale
float scale;

float random(float2 uv)
{
	return frac(sin(dot(uv, float2(12.9898, 78.233))) * 43758.5453123);
}

float addRain(uint3 id)
{
	float w = 0;
	if (random(float2(terrain[id.xy].r, terrain[id.xy].r)) > 0.95)
		w += waterIncrease * dTime;
	return w;
}

float waterSource(uint3 id)
{
	float pos = size / 2;
	float r = 5;
	float w = 0;
	float2 p = float2(id.x, id.y);
	if (p.x > (pos - r) && p.x < (pos + r))
		if (p.y > (pos - r) && p.y < (pos + r))
			w += waterIncrease * dTime;
	return w;
}

float precipitation(uint3 id)
{
	float w = 0;
	if(terrain[id.xy].r > 0.8)
		w += waterIncrease * dTime;
	return w;
}

[numthreads(32,32,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	//terrain[id.xy] += float4(0, waterSource(id), 0, 0);
	terrain[id.xy] += float4(0, addRain(id), 0, 0);
	//terrain[id.xy] += float4(0, precipitation(id), 0, 0);
}
